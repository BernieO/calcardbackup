#######################################################
#
# example config file for calcardbackup
# ---------------------------------------
#
# This file is only needed if you don't want to use command line options.
#
# You can copy this file to any location, then use option -c|--configfile PATH_TO_FILE,
# or place this file in script's directory and don't pass ownCloud/Nextcloud path to script.
# If calcardbackup is being run with using a configfile like this, all options given on
# command line except for -b|--batch are being ignored.
#
# All paths in this config file need to be relative to this files location or absolute paths!
#
# For clarification, the associated command line options are given in comments.
#
#######################################################


# path to ownCloud/Nextcloud installation
# this is mandatory:

nextcloud_path="/usr/share/nginx/www/"


# The script tries to automatically detect the URL of ownCloud/Nextcloud,
# which should work in most cases for versions >= 7.0
# For versions < 7.0 this is mandatory to be changed to suit your setup!
# correlates to option -a|--address
# URL of Own-/Nextcloud Login-page:

nextcloud_url="https://www.my_nextcloud.net/"


# Will cURL trust the servers certificate?
# If you have a self signed certificate you might have to change this to "no"
# correlates to option -s|--selfsigned

trustful_certificate="yes"


# path to file with usernames and passwords (see 'README.md' and 'users.txt.example')
# If this is unset, or the file is not found, calcardbackup will create a backup of all
# calendars/addressbooks by fetching the data directly from the database.
# NOTE: starting with calcardackup version 0.8.0 this file is only mandatory when
#       using the deprecated option 'fetch_from_database="no"' (see below).
# correlates to option -u|--usersfile

users_file=""


# path to folder where backed up files will be saved.
# if not declared, folder 'backups/' in script's directory will be created and used.
# correlates to option -o|--output

backupfolder="backups/"


# format of date extension for backup files. Default is "-%Y-%m-%d" resulting
# in backup files named e.g. "calcardbackup-2017-03-23.tar.gz"
# for syntax, have a look at format options under "man date"
# correlates to option -d|--date

date_extension="-%Y-%m-%d"


# delete old backup files after how many days?
# the default value of "0" means to never delete backups
# correlates to option -r|--remove

delete_backups_older_than="0"


# change to "no" to not compress backup files
# find your files then in a backup directory instead of compressed file
# if you plan to encrypt your backup, this has to be "yes"
# correlates to option -x|--uncompressed

compress="yes"


# change to "zip" to compress backup as zip (instead of tar.gz)
# package "zip" needs to be installed.
# correlates to option -z|--zip

compression_method="tar.gz"


# change first line to "yes" and give a passphrase in the second line to encrypt
# compressed backup with given passphrase by GnuPG (symmetric AES256).
# correlates to option -e|--encrypt
# pay attention to the comments about encryption in 'README.md'!

encrypt_backup="no"
gpg_passphrase="1234"


# change to "no" if you do not want to backup the according category
# correlates to options -na|--no-addressbooks, -nc|--no-calendars

backup_addressbooks="yes"
backup_calendars="yes"


# until v0.6.2 calcardbackup was traditionally backing up calendars and addressbooks
# by downloading the according files from the ownCloud/Nextcloud webinterface. However,
# with large addressbooks, this could lead to timeouts resulting in calcardbackup not
# being able to backup large addressbooks. Also a file with user credentials of all
# users whose calendars/addressbooks should be backed up was mandatory.
# calcardbackup version 0.7.0 brought the possibility to create calendar and addressbook
# backups by fetching the data directly from the database which makes the file with user
# credentials obsolete. Also the time needed for backing up addressbooks is massively
# reduced resulting in much less server load.
# The file users.txt may still be used, if only items of some users shall be backed up, in which
# case passwords don't have to be given anymore.
#
# NOTE: starting with calcardbackup version 0.8.0 the default is "yes" for this option.
#
# change to "no" if you want use deprecated behaviour of this script and download the vcf/ics
# files via http request from your ownCloud/Nextcloud server (not recommended!)
#
# NOTE: all you need to know about this is to NEVER change this to "no", unless you have a good
#       reason to expose cleartext passwords of your ownCloud/Nextcloud users!
#
# setting this to "no" correlates to deprecated option -g|--get-via-http

fetch_from_database="yes"


# change to "yes" if you want to backup shared addressbooks/calendars as well.
# This may be used to provide just one username in 'users.txt', to whom
# all items, needed to be backed up, are shared.
# NOTE: with the default 'fetch_from_database="yes"' and no file with usernames
#       is passed the script (see 'users_file=""' above), this option will be ignored.
# correlates to option -i|--include-shares

include_shares="no"


# if you are running nextcloud-snap (https://github.com/nextcloud/nextcloud-snap),
# you need to change this value to "yes" and use as path to nextcloud
# the path to the nextcloud configuration files. If you haven't changed anything, this
# will be: /var/snap/nextcloud/current/nextcloud/
# Note that calcardbackup needs to be run with sudo when used with snap installations.
# See example No.6 in README.md
# correlates to option -p|--snap

snap="no"


########  end of config file for calcardbackup  ########
